lines(simuresA[[2]])
points(simuresA[[2]])
points(simuresA[[1]])
points(simuresA[[1]])
plotsA <- lapply(simuresA,wiener_plot)
class(plotsA)
library("ggplot")
library("ggplot2")
ggarrange(plotsA[[1]],plotsA[[2]],plotsA[[3]],plotsA[[4]],ncol=2)
library("ggpubr")
install.packages("ggpubr")
ggarrange(plotsA[[1]],plotsA[[2]],plotsA[[3]],plotsA[[4]],ncol=2)
ggpubr::ggarrange(plotsA[[1]],plotsA[[2]],plotsA[[3]],plotsA[[4]],ncol=2)
library("Rmisc")
install.packages("Rmisc")
library("Rmisc")
library("plyr")
multiplot(plotsA[[1]],plotsA[[2]],plotsA[[3]],plotsA[[4]],ncol=2)
plotsA1 <- wiener_plot(simuresA[[1]])
plotsA2 <- wiener_plot(simuresA[[2]])
multiplot(plotsA1,plotsA2)
multiplot(wiener_plot(simuresA[[1]]),wiener_plot(simuresA[[2]]))
wiener_plot(simuresA[[1]])
multiplot(plot(simuresA[[1]]),plot(simuresA[[2]]))
dev.off()
multiplot(plot(simuresA[[1]]),plot(simuresA[[2]]),wiener_plot(simuresA[[3]]))
plot(simuresA[[1]])
plot(simuresA[[1]],xlim=C(0,10))
dev.off()
plot(simuresA[[1]],xlim=c(0,10))
par(mfrow=c(2,1))
multiplot(plot(simuresA[[1]],xlim=c(0,10)),plot(simuresA[[2]]),wiener_plot(simuresA[[3]]))
dev.off()
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
multiplot(plot(simuresA[[1]],xlim=c(0,10)),plot(simuresA[[2]]),wiener_plot(simuresA[[3]]))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
dev.off()
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(simuresA[[1]],xlim=c(0,10));
plot(simuresA[[2]]);
wiener_plot(simuresA[[3]]);
wiener_plot(4)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(simuresA[[1]],xlim=c(0,10))
plot(simuresA[[2]])
wiener_plot(simuresA[[3]])
wiener_plot(simuresA[[4]])
par(mfrow=c(2,2),ncols=2)
par(mfrow=c(2,2),ncol=2)
par(mfrow=c(2,2))
plot(simuresA[[1]],xlim=c(0,10))
plot(simuresA[[2]])
wiener_plot(simuresA[[3]])
wiener_plot(simuresA[[4]])
dev.off()
plot(simuresA[[1]],xlim=c(0,10))
detach("RWiener")
detach
detach(package:"Rwiener")
detach(Rwiener:wiener_plot())
detach(Rwiener:wiener_plot
)
plotsA1 <- plot(simuresA[[1]])
plotsA2 <- plot(simuresA[[2]])
par(mfrow=c(2,1))
plotsA1
plotsA2 <- plot(simuresA[[2]])
dev.off()
plotsA <- lapply(simuresA,wiener_plot)
plotsA
FINAL
library("RWiener")
print(1==2)
25*35+25*32.5
1450/25
rm(list = ls())
library("CTT")
library("dplyr")
library("psych")
library("lavaan")
library("semPlot")
library("semTools")
D1 <- read.csv("fads_all_1.csv")
D2 <- read.csv("fads_all_2.csv")
D3 <- read.csv("fads_all_3.csv")
D4 <- read.csv("fads_all_4.csv")
DA <- read.csv("fads_all_A.csv")
DF <- read.csv("fads_all_F.csv")
DJ <- read.csv("fads_all_J.csv")
alldata <- list(D1,D2,D3,D4,DA,DF,DJ)
D1 <- read.csv("fads_all_1.csv")
2600/22
18*0.88
20*0.88
860/260
3.3*13.6
rm(list = ls())
library("car")
library("dplyr")
Sys.setlocale(category="LC_ALL",locale="en_US.UTF-8") #run this for mac OS setting the local language solving the problems in reading Chinese in FAD_1
setwd("~/Documents/GitHub/FAD_New_Start/DATA")
rm(list = ls())
setwd("~/Documents/GitHub/FAD_New_Start/DATA")
library("car")
library("dplyr")
Sys.setlocale(category="LC_ALL",locale="en_US.UTF-8") #run this for mac OS setting the local language solving the problems in reading Chinese in FAD_1
fad1all <- read.csv("FAD_1_CSV.csv",encoding="UTF-8",header = T) #where resave FAD_1 as csv with UTF-8
head(fad1all[,1:10])
usefulnames1 <- c("id", "age","gender_gene","gender_self_report","education_level",
"FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26",
"BIG5_A1","BIG5_A2","BIG5_A3","BIG5_A4","BIG5_A5","BIG5_A6","BIG5_A7","BIG5_A8","BIG5_A9","BIG5_A10","BIG5_A11","BIG5_A12",
"BIG5_N1","BIG5_N2","BIG5_N3","BIG5_N4","BIG5_N5","BIG5_N6","BIG5_N7","BIG5_N8","BIG5_N9","BIG5_N10","BIG5_N11","BIG5_N12",
"BIG5_C1","BIG5_C2","BIG5_C3","BIG5_C4","BIG5_C5","BIG5_C6","BIG5_C7","BIG5_C8","BIG5_C9","BIG5_C10","BIG5_C11","BIG5_C12",
"BIG5_E1","BIG5_E2","BIG5_E3","BIG5_E4","BIG5_E5","BIG5_E6","BIG5_E7","BIG5_E8", "BIG5_E9","BIG5_E10","BIG5_E11","BIG5_E12",
"BIG5_O1","BIG5_O2","BIG5_O3", "BIG5_O4","BIG5_O5","BIG5_O6","BIG5_O7","BIG5_O8","BIG5_O9","BIG5_O10","BIG5_O11","BIG5_O12")
fad1useful <- fad1all[,usefulnames1]
table(fad1useful$education_level)
educationlvl <- as.vector(fad1useful$education_level)
edu <- car::recode(educationlvl,"'小学及以下'=1;
'初中'=2;
'中专或职高'=3;
'高中'=3;
'大专'=4;
'本科'=5;
'硕士'=6;
'博士'=7;else=0")
table(edu) #recode education´s level with FAD_2´s standard
table(fad1useful$gender_gene)
table(fad1useful$gender_self_report)
genderfad1 <- function(a){
gen <- a[3:4]
genders <- car::recode(gen,"'female'=2;'Female'=2;'male'=1;'Male'=1;else =0") #NA-0
if (genders[1]==0 & genders[2] >=1) gender <- genders[2]
else gender <- genders[1]
return(gender)
}
gender <- apply(fad1useful, 1, genderfad1) #recode variable geneder, use the biological gender
table(gender)
fadnames <- c("FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26")
length(fadnames) #check the number of items
NO <- rep(1,times=length(fad1useful[,1])) #new mark variable, distinguishes different original datasets
age <- fad1useful[,2]
fad1final <- cbind(NO,age,gender,edu,fad1useful[,fadnames]+1,fad1useful[,33:92]) #recode FAD_1 from 0-4 to 1-5; and take the big five´s variables
write.csv(fad1final,"NEW_FAD_1.csv",row.names=FALSE,fileEncoding ="UTF-8")
fad2.1 <- read.csv("FADGS_dataset1_clean.csv")
fad2.2 <- read.csv("FADGS_dataset2_clean.csv")
fad2.3 <- read.csv("FADGS_dataset3_clean.csv")
fad2.4 <- read.csv("FADGS_dataset4_clean.csv")
fad2.5 <- read.csv("FAD_Kong.csv")
usefulnames2 <- c("age","gender","edu",
"FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26")
fad2.1 <- fad2.1[,usefulnames2]
fad2.2 <- fad2.2[,usefulnames2]
fad2.3 <- fad2.3[,usefulnames2]
usefulnames2.4 <- c("age","gender","edu",
"FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26",
"BFI_A1","BFI_A2","BFI_A3","BFI_A4","BFI_A5","BFI_A6","BFI_A7","BFI_A8","BFI_A9",
"BFI_C1","BFI_C2","BFI_C3","BFI_C4","BFI_C5","BFI_C6","BFI_C7","BFI_C8","BFI_C9",
"BFI_N1","BFI_N2","BFI_N3","BFI_N4","BFI_N5","BFI_N6","BFI_N7","BFI_N8",
"BFI_O1","BFI_O2","BFI_O3","BFI_O4","BFI_O5","BFI_O6","BFI_O7","BFI_O8","BFI_O9","BFI_O10",
"BFI_E1","BFI_E2","BFI_E3","BFI_E4","BFI_E5","BFI_E6","BFI_E7","BFI_E8",
"MLOC1","MLOC4","MLOC5","MLOC9","MLOC18","MLOC19","MLOC21","MLOC23",
"MLOC3","MLOC8","MLOC11","MLOC13","MLOC15","MLOC17","MLOC20","MLOC22",
"MLOC2","MLOC6","MLOC7","MLOC10","MLOC12","MLOC14","MLOC16","MLOC24")
fad2.4 <- fad2.4[,usefulnames2.4]
fad2 <- dplyr::bind_rows(fad2.1,fad2.2,fad2.3,fad2.4,fad2.5)
NO <- c(rep(2.1,times=length(fad2.1[,1])),
rep(2.2,times=length(fad2.2[,1])),
rep(2.3,times=length(fad2.3[,1])),
rep(2.4,times=length(fad2.4[,1])),
rep(2.5,times=length(fad2.5[,1])))
fad2final <- cbind(NO,fad2)
write.csv(fad2final,"NEW_FAD_2.csv",row.names=FALSE,fileEncoding ="UTF-8")
fad3all <- read.csv("FAD_3.csv") #cause FAD3 just included gender and 27 items of FAD+
NO <- rep(3,times=length(fad3all[,1]))
fad3final <- cbind(NO,fad3all)
write.csv(fad3final,"NEW_FAD_3.csv",row.names=FALSE,fileEncoding ="UTF-8")
Brian1A <- read.csv("Brian_1A.csv")
Brian1B <- read.csv("Brian_1B.csv")
Brian1C <- read.csv("Brian_1C.csv")
age <- Brian1C[,"Age"]
gender <- Brian1C[,"Gender"]
Brian1C <- cbind(age,gender,Brian1C[,fadnames])
Brian2 <- read.csv("Brian_2.csv")
describe(Brian2) #which FW4 needs recode
describe
library("psych")
describe(Brian2) #which FW4 needs recode
table(Brian2[,6])
recode13578 <- function(v){ #function made for recoding FW4 in Brian2 dataset
v[which(v==3)] <- 2
v[which(v==5)] <- 3
v[which(v==7)] <- 4
v[which(v==8)] <- 5
return(v)
}
Brian2[,6] <- recode13578(Brian2[,6])
table(Brian2$age)
Brian2$age <- Brian2$age+17 #where recode "age" with original data with 17 difference
Lysanne <- read.csv("Lysanne.csv")
fadAall <- dplyr::bind_rows(Brian1A,Brian1B,Brian1C,Brian2,Lysanne)
NO <- c(rep(5.11,times=length(Brian1A[,1])),
rep(5.12,times=length(Brian1B[,1])),
rep(5.13,times=length(Brian1C[,1])),
rep(5.2,times=length(Brian2[,1])),
rep(5.3,times=length(Lysanne[,1])))
fadAfinal <- cbind(NO,fadAall)
write.csv(fadAfinal,"NEW_FAD_A.csv",row.names=FALSE,fileEncoding ="UTF-8")
fadFall <- read.csv("FAD_F.csv")
gender <- fadFall$Sexe
age <- fadFall$Age
NO <- rep(6,times=length(fadFall[,1]))
fadFfinal <- cbind(NO,gender,age,fadFall[,fadnames])
write.csv(fadFfinal,"NEW_FAD_F.csv",row.names=FALSE,fileEncoding ="UTF-8")
fadJall <- read.csv("FAD_J.csv")
NO <- rep(7,times=length(fadJall[,1]))
fadJfinal <- cbind(NO,fadJall[,fadnames])
write.csv(fadJfinal,"NEW_FAD_J.csv",row.names=FALSE,fileEncoding ="UTF-8")
rm(list = ls())
library("psych")
data1 <- read.csv("NEW_FAD_1.csv")
data2 <- read.csv("NEW_FAD_2.csv")
data3 <- read.csv("NEW_FAD_3.csv")
dataA <- read.csv("NEW_FAD_A.csv")
dataF <- read.csv("NEW_FAD_F.csv")
dataJ <- read.csv("NEW_FAD_J.csv")
dataall <- list(data1,data2,data3,dataA,dataF,dataJ)
fadnames <- c("FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26")
bfinames <- c("BFI_A1","BFI_A2","BFI_A3","BFI_A4","BFI_A5","BFI_A6","BFI_A7","BFI_A8","BFI_A9",
"BFI_C1","BFI_C2","BFI_C3","BFI_C4","BFI_C5","BFI_C6","BFI_C7","BFI_C8","BFI_C9",
"BFI_N1","BFI_N2","BFI_N3","BFI_N4","BFI_N5","BFI_N6","BFI_N7","BFI_N8",
"BFI_O1","BFI_O2","BFI_O3","BFI_O4","BFI_O5","BFI_O6","BFI_O7","BFI_O8","BFI_O9","BFI_O10",
"BFI_E1","BFI_E2","BFI_E3","BFI_E4","BFI_E5","BFI_E6","BFI_E7","BFI_E8")
mlocnames <-  c("MLOC1","MLOC4","MLOC5","MLOC9","MLOC18","MLOC19","MLOC21","MLOC23",
"MLOC3","MLOC8","MLOC11","MLOC13","MLOC15","MLOC17","MLOC20","MLOC22",
"MLOC2","MLOC6","MLOC7","MLOC10","MLOC12","MLOC14","MLOC16","MLOC24")
cleaning <- function(m){
fadnames <- c("FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26")
mfad <- m[,fadnames]
cleaning01 <-function(v){
if (length(v!=27)) res <- 0
if (anyNA(v)==T) res <- 0 #detect cases with NA
else {fretable <- table(v) #detect cases with same responses
frenvm <- length(fretable)
if (frenvm<=1) res <- 0
else res <- 1}
return(res)
}
stayornot <- apply(mfad, 1, cleaning01)
staymarked <- cbind(m,stayornot)
cleaned <- staymarked[which(stayornot==1),1:(length(m[1,]))]
return(cleaned)
}
cleaneddataall <- lapply(dataall,cleaning)
scorescalculate <- function(m){
FADScores <- function(v){
FDNames <- c("FD1","FD5","FD9","FD13", "FD17")
SDNames <- c("SD2","SD6","SD10","SD14","SD18","SD22","SD24")
UPNames <- c("UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27")
FWNames <- c("FW4","FW8","FW12","FW16","FW21","FW23","FW26")
FD <- sum(v[FDNames])/length(FDNames)
SD <- sum(v[SDNames])/length(SDNames)
UP <- sum(v[UPNames])/length(UPNames)
FW <- sum(v[FWNames])/length(FWNames)
Socres <- cbind(FD,SD,UP,FW)
return(Socres)
}
fad4scores <- t(apply(m,1,FADScores))
colnames(fad4scores) <- c("FD","SD","UP","FW")
allwithscores <- cbind(m,fad4scores)
return(allwithscores)
}
cleaneddataallwithscores <- lapply(cleaneddataall, scorescalculate)
write.csv(cleaneddataallwithscores[[1]],"fads_all_1.csv",row.names=FALSE)
write.csv(cleaneddataallwithscores[[2]],"fads_all_2.csv",row.names=FALSE)
write.csv(cleaneddataallwithscores[[3]],"fads_all_3.csv",row.names=FALSE)
write.csv(cleaneddataallwithscores[[4]],"fads_all_A.csv",row.names=FALSE)
write.csv(cleaneddataallwithscores[[5]],"fads_all_F.csv",row.names=FALSE)
write.csv(cleaneddataallwithscores[[6]],"fads_all_J.csv",row.names=FALSE)
takethefads <- function(m){
usefulnames <- c("NO","FD","SD","UP","FW",
"FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26")
fads <- m[,usefulnames]
return(fads)
}
fadsall <- lapply(cleaneddataallwithscores, takethefads)
write.csv(fadsall[[1]],"fads_only_1.csv",row.names=FALSE)
write.csv(fadsall[[2]],"fads_only_2.csv",row.names=FALSE)
write.csv(fadsall[[3]],"fads_only_3.csv",row.names=FALSE)
write.csv(fadsall[[4]],"fads_only_A.csv",row.names=FALSE)
write.csv(fadsall[[5]],"fads_only_F.csv",row.names=FALSE)
write.csv(fadsall[[6]],"fads_only_J.csv",row.names=FALSE)
rm(list = ls())
library("CTT")
library("dplyr")
library("psych")
library("lavaan")
library("semPlot")
library("semTools")
D1 <- read.csv("fads_all_1.csv")
D2 <- read.csv("fads_all_2.csv")
D3 <- read.csv("fads_all_3.csv")
DA <- read.csv("fads_all_A.csv")
DF <- read.csv("fads_all_F.csv")
DJ <- read.csv("fads_all_J.csv")
alldata <- list(D1,D2,D3,DA,DF,DJ)
fordescriptions <- function(m){
des <- apply(m,2,psych::describe)
return(des)
}
descriptionsall <- lapply(alldata, fordescriptions)
forfrecuencies <- function(m){
fre <- apply(m, 2, table)
return(fre)
}
tablesall <- lapply(alldata,forfrecuencies)
fad1 <- read.csv("fads_only_1.csv")
fad2 <- read.csv("fads_only_2.csv")
fad3 <- read.csv("fads_only_3.csv")
fadA <- read.csv("fads_only_A.csv")
fadF <- read.csv("fads_only_F.csv")
fadJ <- read.csv("fads_only_J.csv")
allfad <- list(fad1,fad2,fad3,fadA,fadF,fadJ)
########################################
########################################
############  RELIABILITY ##############
########################################
########################################
fadnames <- c("FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26")
FDnames <- c("FD1","FD5","FD9","FD13","FD17")
SDnames <- c("SD2","SD6","SD10","SD14","SD18","SD22","SD24")
UPnames <- c("UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27")
FWnames <- c("FW4","FW8","FW12","FW16","FW21","FW23","FW26")
alphasandomegas <- function(m){ #function for whole and 4 dimensions´ reliability with alpha & omega
fadnames <- c("FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26")
alpha0 <- (CTT::reliability(m[,fadnames]))$alpha
omega0 <- (psych::omega(m[,fadnames]))$omega.tot
FDnames <- c("FD1","FD5","FD9","FD13","FD17")
SDnames <- c("SD2","SD6","SD10","SD14","SD18","SD22","SD24")
UPnames <- c("UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27")
FWnames <- c("FW4","FW8","FW12","FW16","FW21","FW23","FW26")
alphafd <- (CTT::reliability(m[,FDnames]))$alpha
alphasd <- (CTT::reliability(m[,SDnames]))$alpha
alphaup <- (CTT::reliability(m[,UPnames]))$alpha
alphafw <- (CTT::reliability(m[,FWnames]))$alpha
omegafd <- (psych::omega(m[,FDnames]))$omega.tot
omegasd <- (psych::omega(m[,SDnames]))$omega.tot
omegaup <- (psych::omega(m[,UPnames]))$omega.tot
omegafw <- (psych::omega(m[,FWnames]))$omega.tot
res <- cbind(alpha0,alphafd,alphasd,alphaup,alphafw,
omega0,omegafd,omegasd,omegaup,omegafw)
return(res)
}
alphaandomega <- lapply(allfad,alphasandomegas)
reliabilities <- matrix(unlist(alphaandomega),nrow = 6,byrow = T)
colnames(reliabilities) <- c("alpha","alphaFD","alphaSD","alphaUP","alphaFW",
"omega","omegaFD","omegaSD","omegaUP","omegaFW")
rownames(reliabilities) <- c("FAD_1","FAD_2","FAD_3","FAD_A","FAD_F","FAD_J")
write.table(reliabilities,"alphasandomegas.txt")
correlations <- function(m){
usefulnames <- c("FD","SD","UP","FW",
"FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26")
relations <- cor(m[,usefulnames])
correlationsto01 <- function(v){
v_abs <- abs(v)
cuts <- cut(v_abs,breaks = c(0,0.5,1),labels=c(0,1))
return(cuts)
}
c01 <- apply(relations,1,correlationsto01)
return(cbind(relations,c01))
}
correlationsres <- lapply(allfad,correlations)
for (i in 1:6) {
textnames <- paste("correlations",i,".txt",sep = "")
write.table(correlationsres[[i]],textnames)
}
docfa <- function(m){
model <-  'FD =~ FD1 + FD5 + FD9 + FD13 + FD17;
SD =~ SD2 + SD6 + SD10 + SD14 + SD18 + SD22 + SD24;
UP =~ UP3 + UP7 + UP11 + UP15 + UP19 + UP20 + UP25 + UP27;
FW =~ FW4 + FW8 + FW12 + FW16 + FW21 + FW23 + FW26'
fadnames <- c("FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26")
m <- m[,fadnames]
rescfa <- lavaan::cfa(model,m,estimator="ml")
semPlot::semPaths(rescfa,"std",rotation = 2,layout = "tree2",nCharNodes = 0,
sizeLat = 15, sizeLat2 = 7, label.norm = "OOOOO",
mar=c(2,6,2,4), curvePivot = TRUE,
edge.label.cex=1.2, residuals = F)
res <- standardizedSolution(rescfa)
return(res)
}
cfares <- lapply(allfad, docfa)
for (i in 1:6) {
textnames <- paste("cfas",i,".txt",sep = "")
write.table(cfares[[i]],textnames)
}
MI <- function(m1,m2){
fadnames <- c("FD1","FD5","FD9","FD13","FD17",
"SD2","SD6","SD10","SD14","SD18","SD22","SD24",
"UP3","UP7","UP11","UP15","UP19","UP20","UP25","UP27",
"FW4","FW8","FW12","FW16","FW21","FW23","FW26")
model <-  'FD =~ FD1 + FD5 + FD9 + FD13 + FD17;
SD =~ SD2 + SD6 + SD10 + SD14 + SD18 + SD22 + SD24;
UP =~ UP3 + UP7 + UP11 + UP15 + UP19 + UP20 + UP25 + UP27;
FW =~ FW4 + FW8 + FW12 + FW16 + FW21 + FW23 + FW26'
m1fad <- m1[,fadnames]
m2fad <- m2[,fadnames]
g <- c(rep("0",length(m1[,1])),rep("1",length(m2[,1])))
datas <- cbind(rbind(m1fad,m2fad),g)
datas$g <- factor(datas$g,levels = c("0","1"))
config <- cfa(model, datas, group="g")
weak <- cfa(model, datas, group="g", group.equal="loadings")
strong<- cfa(model, datas, group="g", group.equal= c("loadings", "intercepts"))
strict<- cfa(model, datas, group="g",
group.equal= c("loadings", "intercepts", "residuals"))
res1 <- anova(config, weak, strong, strict)
res2 <- measurementInvariance(model=model, data=datas, group="g")
return(c(res1,res2))
}
MI(fad2,fadA)
MI(fadA,fadF)
MI(fadA,fadJ)
BFI_NAlocated <- which(is.na(D2[,"BFI_A1"]))
forBFI_FAD <- D2[-BFI_NAlocated,]
FAD_BFI <- forBFI_FAD[,c("FD","SD","UP","FW",fadnames)]
BFIS <- function(datos,nombre,key){
databfi <- datos[,nombre]
data_corrected <- matrix(t(apply(databfi,1,function(x){x*key})),ncol = length(key))
datafinal <- na.exclude(data_corrected)
bfiscores <- apply(datafinal, 1, function(x){sum(x)/length(key)})
return(bfiscores)
} #function for BIG5 5 dimensions' Scores
BFI_ANames <- c("BFI_A1","BFI_A2","BFI_A3","BFI_A4","BFI_A5","BFI_A6","BFI_A7","BFI_A8","BFI_A9")
BFI_AKeys <- c(1,1,1,1,1,-1,-1,-1,-1)
BFIA <- BFIS(D2,BFI_ANames,BFI_AKeys)
length(BFIA)
BFI_CNames <- c("BFI_C1","BFI_C2","BFI_C3","BFI_C4","BFI_C5","BFI_C6","BFI_C7","BFI_C8","BFI_C9")
BFI_CKeys <- c(1,1,1,1,1,-1,-1,-1,-1)
BFIC <- BFIS(D2,BFI_CNames,BFI_CKeys)
length(BFIC)
BFI_NNames <- c("BFI_N1","BFI_N2","BFI_N3","BFI_N4","BFI_N5","BFI_N6","BFI_N7","BFI_N8")
BFI_NKeys <- c(1,1,1,1,1,-1,-1,-1)
BFIN <- BFIS(D2,BFI_NNames,BFI_NKeys)
length(BFIN)
BFI_ONames <- c("BFI_O1","BFI_O2","BFI_O3","BFI_O4","BFI_O5","BFI_O6","BFI_O7","BFI_O8","BFI_O9","BFI_O10")
BFI_OKeys <- c(1,1,1,1,1,1,1,1,1,1)
BFIO <- BFIS(D2,BFI_ONames,BFI_OKeys)
length(BFIO)
BFI_ENames <- c("BFI_E1","BFI_E2","BFI_E3","BFI_E4","BFI_E5","BFI_E6","BFI_E7","BFI_E8")
BFI_EKeys <- c(1,1,1,1,1,1,1,1)
BFIE <- BFIS(D2,BFI_ENames,BFI_EKeys)
length(BFIE)
BFIS <- cbind(BFIA,BFIC,BFIN,BFIO,BFIE)
BFI_FAD_Final <- cbind(BFIS,FAD_BFI)
corBFI_FAD <- cor(BFI_FAD_Final[,1:9])
write.table(corBFI_FAD,"BFI_FAD.txt")
corBFI_FAD[which(abs(corBFI_FAD)<1 & abs(corBFI_FAD)>0.6)]
corBFI_FAD27 <- cor(BFI_FAD_Final[,-c(6,7,8,9)])
corBFI_FAD27[which(abs(corBFI_FAD27)<1 & abs(corBFI_FAD27)>0.6)] #FAD1-9
MLOC_NAlocated <- which(is.na(D2[,"MLOC1"]))
forMLOC_FAD <- D2[-MLOC_NAlocated,]
FAD_MLOC <- forMLOC_FAD[,c("FD","SD","UP","FW",fadnames)]
MLOC_INames <- c("MLOC1","MLOC4","MLOC5","MLOC9","MLOC18","MLOC19","MLOC21","MLOC23")
MLOC_I <- apply(forMLOC_FAD[,MLOC_INames]+3,1,sum)
MLOC_PNames <- c("MLOC3","MLOC8","MLOC11","MLOC13","MLOC15","MLOC17","MLOC20","MLOC22")
MLOC_P <- apply(forMLOC_FAD[,MLOC_PNames]+3,1,sum)
MLOC_CNames <- c("MLOC2","MLOC6","MLOC7","MLOC10","MLOC12","MLOC14","MLOC16","MLOC24")
MLOC_C <- apply(forMLOC_FAD[,MLOC_CNames]+3,1,sum)
MLOCS <- cbind(MLOC_I,MLOC_P,MLOC_C)
MLOC_FAD_Final <- cbind(MLOCS,FAD_MLOC)
corMLOC_FAD <- cor(MLOC_FAD_Final[,1:7])
write.table(corMLOC_FAD,"MLOC_FAD.txt")
corMLOC_FAD[which(abs(corMLOC_FAD)<1 & abs(corMLOC_FAD)>0.6)] #low correlations bewteen MLOC & FAD; buuuuut, noted MLOC_P*MLOC_C
corMLOC_FAD27 <- cor(MLOC_FAD_Final[,-c(4,5,6,7)])
corMLOC_FAD27[which(abs(corMLOC_FAD27)<1 & abs(corMLOC_FAD27)>0.6)]
BFI_FAD_Final[,-c(6,7,8,9)]
corBFI_FAD[which(abs(corBFI_FAD)<1 & abs(corBFI_FAD)>0.6)]
corMLOC_FAD27 <- cor(MLOC_FAD_Final[,-c(4,5,6,7)])
MLOC_FAD_Final[,-c(4,5,6,7)]
